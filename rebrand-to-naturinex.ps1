# üîÑ Naturinex Rebranding Script

Write-Host "üéØ Starting comprehensive rebranding from Naturinex to Naturinex..." -ForegroundColor Green

# Define the directory to search
$baseDir = "c:\Users\maito\Naturinex-app"

# Define replacement patterns
$replacements = @(
    @{ Find = "Naturinex"; Replace = "Naturinex" }
    @{ Find = "Naturinex"; Replace = "Naturinex" }
    @{ Find = "Naturinex"; Replace = "naturinex" }
    @{ Find = "Naturinex"; Replace = "NATURINEX" }
    @{ Find = "Naturinex-app"; Replace = "naturinex-app" }
    @{ Find = "Naturinex-b6252"; Replace = "naturinex-b6252" }
    @{ Find = "admin@Naturinex.com"; Replace = "admin@naturinex.com" }
    @{ Find = "privacy@Naturinex.app"; Replace = "privacy@naturinex.app" }
    @{ Find = "support@Naturinex.app"; Replace = "support@naturinex.app" }
    @{ Find = "https://Naturinex.app"; Replace = "https://naturinex.app" }
    @{ Find = "Naturinex Professional"; Replace = "Naturinex Professional" }
    @{ Find = "Naturinex Premium"; Replace = "Naturinex Premium" }
    @{ Find = "Naturinex Free"; Replace = "Naturinex Free" }
    @{ Find = "Naturinex Basic"; Replace = "Naturinex Basic" }
    @{ Find = "Powered by Naturinex"; Replace = "Powered by Naturinex" }
    @{ Find = "Generated by Naturinex"; Replace = "Generated by Naturinex" }
    @{ Find = "Get Naturinex"; Replace = "Get Naturinex" }
)

# File extensions to process
$extensions = @("*.md", "*.js", "*.json", "*.html", "*.css", "*.txt", "*.ps1", "*.rules")

# Files to exclude
$excludeFiles = @("node_modules", ".git", "build", "dist", "coverage")

Write-Host "üìÇ Scanning files for rebranding..." -ForegroundColor Yellow

$totalFiles = 0
$updatedFiles = 0

foreach ($ext in $extensions) {
    $files = Get-ChildItem -Path $baseDir -Recurse -Include $ext | Where-Object {
        $exclude = $false
        foreach ($excludeDir in $excludeFiles) {
            if ($_.FullName -like "*$excludeDir*") {
                $exclude = $true
                break
            }
        }
        -not $exclude
    }
    
    foreach ($file in $files) {
        $totalFiles++
        $content = Get-Content -Path $file.FullName -Raw -ErrorAction SilentlyContinue
        
        if ($content) {
            $originalContent = $content
            
            # Apply all replacements
            foreach ($replacement in $replacements) {
                $content = $content -replace [regex]::Escape($replacement.Find), $replacement.Replace
            }
            
            # If content changed, write it back
            if ($content -ne $originalContent) {
                Set-Content -Path $file.FullName -Value $content -NoNewline
                Write-Host "‚úÖ Updated: $($file.FullName)" -ForegroundColor Green
                $updatedFiles++
            }
        }
    }
}

Write-Host "`nüéâ Rebranding complete!" -ForegroundColor Green
Write-Host "üìä Files processed: $totalFiles" -ForegroundColor Cyan
Write-Host "üìù Files updated: $updatedFiles" -ForegroundColor Cyan

Write-Host "`nüîÑ Next steps:" -ForegroundColor Yellow
Write-Host "1. Update Firebase project settings in console" -ForegroundColor White
Write-Host "2. Update domain authorization in Firebase Auth" -ForegroundColor White
Write-Host "3. Test the application thoroughly" -ForegroundColor White
Write-Host "4. Update any external integrations (Stripe, etc.)" -ForegroundColor White

Write-Host "`n‚ú® Naturinex rebranding complete! ‚ú®" -ForegroundColor Green
