services:
  # Web Service - Main API Server
  - type: web
    name: naturinex-api
    runtime: node
    region: oregon # or singapore, frankfurt, ohio
    plan: free # upgrade to starter/standard for production
    buildCommand: npm install
    startCommand: node index.js
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 5000
      
      # Firebase Admin SDK
      - key: FIREBASE_PROJECT_ID
        sync: false
      - key: FIREBASE_PRIVATE_KEY
        sync: false
      - key: FIREBASE_CLIENT_EMAIL
        sync: false
      
      # AI Services
      - key: GEMINI_API_KEY
        sync: false
      
      # Payment Processing
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      
      # Database (Render PostgreSQL)
      - key: DATABASE_URL
        fromDatabase:
          name: naturinex-db
          property: connectionString
      
      # Resend Email Service
      - key: RESEND_API_KEY
        sync: false
      - key: RESEND_FROM_EMAIL
        value: noreply@naturinex.com
      - key: RESEND_WEBHOOK_SECRET
        sync: false
      
      # Application URLs
      - key: APP_URL
        value: https://naturinex.com
      - key: API_URL
        value: https://naturinex-api.onrender.com
      
      # Security
      - key: JWT_SECRET
        generateValue: true
      - key: ENCRYPTION_KEY
        generateValue: true
      
      # Feature Flags
      - key: USE_MOCK_DATA
        value: false
      - key: ENABLE_EMAIL_SERVICE
        value: true
      - key: ENABLE_MONITORING
        value: true
      
      # Rate Limiting
      - key: MAX_REQUESTS_PER_MINUTE
        value: 60
      - key: MAX_AI_REQUESTS_PER_DAY
        value: 100
      
      # Compliance
      - key: DATA_RETENTION_DAYS
        value: 365
      - key: ENABLE_GDPR_FEATURES
        value: true
      - key: ENABLE_HIPAA_FEATURES
        value: true
    
    # Health check
    healthCheckPath: /health
    
    # Auto-deploy from GitHub
    autoDeploy: true
    
    # Build filters (only deploy on changes to server)
    buildFilter:
      paths:
        - server/**
        - package.json
        - package-lock.json

databases:
  # PostgreSQL Database
  - name: naturinex-db
    plan: free # upgrade to starter/standard for production
    region: oregon # must match service region
    postgresMajorVersion: 15
    ipAllowList: [] # Allow connections from anywhere (configure in production)

# Cron Jobs (optional)
# Uncomment to enable scheduled tasks
# crons:
#   - name: email-cleanup
#     runtime: node
#     schedule: "0 0 * * *" # Daily at midnight
#     buildCommand: npm install
#     startCommand: node scripts/cleanup-emails.js
#     envVars:
#       - key: DATABASE_URL
#         fromDatabase:
#           name: naturinex-db
#           property: connectionString
#   
#   - name: health-monitor
#     runtime: node  
#     schedule: "*/15 * * * *" # Every 15 minutes
#     buildCommand: npm install
#     startCommand: node scripts/health-check.js
#     envVars:
#       - key: API_URL
#         value: https://naturinex-api.onrender.com
#       - key: RESEND_API_KEY
#         sync: false