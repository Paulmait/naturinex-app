// Script to create admin userconst admin = require('firebase-admin');const bcrypt = require('bcryptjs');require('dotenv').config();// Initialize Firebase Adminif (!admin.apps.length) {  admin.initializeApp({    credential: admin.credential.cert({      projectId: process.env.FIREBASE_PROJECT_ID,      clientEmail: process.env.FIREBASE_CLIENT_EMAIL,      privateKey: process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g, '\n')    })  });}async function createAdminUser() {  try {    // Admin credentials    const adminEmail = 'admin@naturinex.com';    const adminPassword = 'Natur!nex2025#Secure';    const hashedPassword = await bcrypt.hash(adminPassword, 12);    // Create user in Firebase Auth    let firebaseUser;    try {      firebaseUser = await admin.auth().createUser({        email: adminEmail,        password: adminPassword,        emailVerified: true,        displayName: 'Naturinex Admin'      });    } catch (error) {      if (error.code === 'auth/email-already-exists') {        firebaseUser = await admin.auth().getUserByEmail(adminEmail);      } else {        throw error;      }    }    // Set custom claims for admin    await admin.auth().setCustomUserClaims(firebaseUser.uid, {      admin: true,      role: 'super_admin'    });    // Create admin profile in Firestore    const adminProfile = {      uid: firebaseUser.uid,      email: adminEmail,      displayName: 'Naturinex Admin',      role: 'admin',      isAdmin: true,      permissions: ['all'],      createdAt: admin.firestore.FieldValue.serverTimestamp(),      passwordHash: hashedPassword, // Store for admin security service      twoFactorEnabled: false,      securitySettings: {        requirePasswordChange: true,        passwordLastChanged: new Date(),        lastLogin: null,        loginAttempts: 0      }    };    await admin.firestore()      .collection('users')      .doc(firebaseUser.uid)      .set(adminProfile, { merge: true });    // Create admin metadata    await admin.firestore()      .collection('adminUsers')      .doc(firebaseUser.uid)      .set({        email: adminEmail,        role: 'super_admin',        createdAt: admin.firestore.FieldValue.serverTimestamp(),        createdBy: 'system',        active: true      });  } catch (error) {    console.error('‚ùå Error creating admin user:', error);  } finally {    process.exit();  }}// Run the scriptcreateAdminUser();