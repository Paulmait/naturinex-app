require('dotenv').config();const mongoose = require('mongoose');const DataIngestionOrchestrator = require('../services/dataIngestion/dataIngestionOrchestrator');async function ingestAllRemedies() {  try {    // Connect to MongoDB    await mongoose.connect(process.env.MONGODB_URI);    // Initialize the orchestrator    const orchestrator = new DataIngestionOrchestrator();    // Full list of remedies to ingest    const remedies = [      'turmeric', 'ginger', 'garlic', 'honey', 'cinnamon',      'green tea', 'chamomile', 'peppermint', 'lavender', 'echinacea',      'ginseng', 'ashwagandha', 'valerian', 'elderberry', 'milk thistle',      'st johns wort', 'saw palmetto', 'ginkgo biloba', 'hawthorn', 'feverfew',      'black cohosh', 'evening primrose', 'tea tree oil', 'aloe vera', 'calendula',      'arnica', 'witch hazel', 'eucalyptus', 'rosemary', 'thyme',      'oregano oil', 'coconut oil', 'apple cider vinegar', 'lemon balm', 'passionflower'    ];    let successCount = 0;    let errorCount = 0;    for (const remedy of remedies) {      try {        const result = await orchestrator.ingestSingleQuery(remedy);        if (result.success && result.data) {          successCount++;        } else {          errorCount++;        }        // Add delay to avoid rate limiting        await new Promise(resolve => setTimeout(resolve, 2000));      } catch (error) {        console.error(`❌ Error ingesting ${remedy}:`, error.message);        errorCount++;      }    }    );    );    await mongoose.disconnect();  } catch (error) {    console.error('❌ Fatal error during ingestion:', error);    process.exit(1);  }}// Run if called directlyif (require.main === module) {  ingestAllRemedies().then(() => {    process.exit(0);  });}module.exports = { ingestAllRemedies };