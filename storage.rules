rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isValidImage() {
      return request.resource.contentType.matches('image/.*') &&
             request.resource.size < 10 * 1024 * 1024; // 10MB limit
    }
    
    // User profile images
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId) && isValidImage();
    }
    
    // Scan images - stored by user
    match /users/{userId}/scans/{scanId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidImage();
      allow delete: if isOwner(userId);
    }
    
    // Temporary scan uploads (auto-deleted after processing)
    match /temp/{userId}/{fileName} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId) && isValidImage();
      // These should be deleted by cloud functions after processing
    }
    
    // Public assets (logos, etc.)
    match /public/{allPaths=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // Admin uploads
    match /admin/{allPaths=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() && 
        (request.auth.token.email == 'admin@naturinex.com' ||
         request.auth.token.email == 'guampaul@gmail.com');
    }
    
    // Deny all other access
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}